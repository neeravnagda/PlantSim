#ifndef MAINWINDOW_H_
#define MAINWINDOW_H_

#include <QKeyEvent>
#include <QMainWindow>
#include "PlantScene.h"
#include "PlantBlueprintDialog.h"
#include "SceneManagerDialog.h"

//----------------------------------------------------------------------------------------------------------------------
/// @file MainWindow.h
/// @brief This class is the main window, containing the NGLScene widget and UI functions
/// @author Neerav Nagda
/// @version 1.0
/// @date 11/05/17
/// @class MainWindow
/// @brief This class is the main window, containing widgets and UI functions
//----------------------------------------------------------------------------------------------------------------------

namespace Ui {
class MainWindow;
}

class MainWindow : public QMainWindow
{
		Q_OBJECT

	public:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Constructor
		/// @param parent This is set to 0 by default as everything will be a child of this class
		//----------------------------------------------------------------------------------------------------------------------
		explicit MainWindow(QWidget *parent = 0);
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Destructor
		//----------------------------------------------------------------------------------------------------------------------
		~MainWindow();

	private slots:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Quit the application
		//----------------------------------------------------------------------------------------------------------------------
		void quit();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Open the plant blueprint dialog via the main UI
		//----------------------------------------------------------------------------------------------------------------------
		void openPlantBlueprintDialogFromUI();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Open the plant blueprint dialog from the menu bar
		//----------------------------------------------------------------------------------------------------------------------
		void openPlantBlueprintDialogFromMenubar();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Close the plant blueprint dialog
		//----------------------------------------------------------------------------------------------------------------------
		void closePlantBlueprintDialog();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Open the scene manager dialog
		//----------------------------------------------------------------------------------------------------------------------
		void openSceneManager();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Close the scene manager dialog
		//----------------------------------------------------------------------------------------------------------------------
		void closeSceneManager();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Create a new Plant object
		//----------------------------------------------------------------------------------------------------------------------
		void createNewPlant();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Delete a Plant object
		/// @param _index The index into the container of Plants
		/// This calls the delete plant function in NGLScene
		//----------------------------------------------------------------------------------------------------------------------
		void deletePlant(unsigned _index);
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Create a new Plant Blueprint
		/// This calls the function from the class PlantBlueprintDialog with the same name
		/// If the Dialog returns true, close the dialog, else keep it open
		//----------------------------------------------------------------------------------------------------------------------
		void createPlantBlueprint();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Update the all plants in the scene
		/// This is calls the function from the class NGLScene to update the plants
		//----------------------------------------------------------------------------------------------------------------------
		void updatePlants();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Set a plant visibility
		/// @param _index The index into the array of plants
		/// @param _state The visibility state to set
		//----------------------------------------------------------------------------------------------------------------------
		void setPlantVisibility(unsigned _index, bool _state);

	private:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief The GUI
		//----------------------------------------------------------------------------------------------------------------------
		Ui::MainWindow *m_ui;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief OpenGL widget
		//----------------------------------------------------------------------------------------------------------------------
		PlantScene *m_gl;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Dialog box to create a new Plant Blueprint Instance
		//----------------------------------------------------------------------------------------------------------------------
		PlantBlueprintDialog *m_plantBlueprintDialog;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Dialog box to manage Plants in the scene
		//----------------------------------------------------------------------------------------------------------------------
		SceneManagerDialog *m_sceneManagerDialog;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Handle key presses
		/// @param _event The key to query
		//----------------------------------------------------------------------------------------------------------------------
		void keyPressEvent(QKeyEvent *_event);
};

#endif // MAINWINDOW_H_
