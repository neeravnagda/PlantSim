#ifndef PLANTSCENE_H_
#define PLANTSCENE_H_

#include <array>
#include <string>
#include <vector>
#include <ngl/Camera.h>
#include <ngl/Mat4.h>
#include <ngl/Vec3.h>
#include <QOpenGLWidget>
#include "Plant.h"
//----------------------------------------------------------------------------------------------------------------------
/// @file PlantScene.h
/// @brief This class is a widget in the MainWindow and draws the plants
/// @author Neerav Nagda
/// @version 1.0
/// @date 10/05/17
/// @class PlantScene
/// @brief OpenGL widget to handle drawing of plants
//----------------------------------------------------------------------------------------------------------------------

class PlantScene : public QOpenGLWidget
{
	public:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief constructor
		/// @param _parent The parent window to the class
		//----------------------------------------------------------------------------------------------------------------------
		PlantScene(QWidget *_parent);
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief destructor
		//----------------------------------------------------------------------------------------------------------------------
		~PlantScene();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief the initialize class is called once when the window is created and we have a valid GL context
		/// use this to setup any default GL stuff
		//----------------------------------------------------------------------------------------------------------------------
		void initializeGL() override;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief this is called everytime we want to draw the scene
		//----------------------------------------------------------------------------------------------------------------------
		void paintGL() override;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief this is called everytime we resize the window
		//----------------------------------------------------------------------------------------------------------------------
		void resizeGL(int _w, int _h) override;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Update the plants
		/// This is called from a slot in the MainWindow class
		//----------------------------------------------------------------------------------------------------------------------
		void updatePlants();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Create a new plant object in the container
		/// @param _type The PlantBlueprint for the object to use
		/// @param _x The x coordinate to place the object at
		/// @param _z The z coordinate to place the object at
		//----------------------------------------------------------------------------------------------------------------------
		void createPlant(std::string _type, float _x, float _z);
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Set a plant visibility from the container
		/// @param _index The index into the vector m_plants
		/// @param _state The new visibility state
		//----------------------------------------------------------------------------------------------------------------------
		void setPlantVisibility(unsigned _index, bool _state);
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Delete a plant from the container
		/// @param _index The index into the vector m_plants
		//----------------------------------------------------------------------------------------------------------------------
		void deletePlant(unsigned _index);

	private:
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief the camera
		//----------------------------------------------------------------------------------------------------------------------
		ngl::Camera m_camera;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Container of plant objects
		//----------------------------------------------------------------------------------------------------------------------
		std::vector<Plant> m_plants;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Ground Texture ID for draw calls
		//----------------------------------------------------------------------------------------------------------------------
		GLuint m_groundTexture;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Last x position
		//----------------------------------------------------------------------------------------------------------------------
		int m_origX = 0;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Last y position
		//----------------------------------------------------------------------------------------------------------------------
		int m_origY = 0;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Mouse rotation flag
		//----------------------------------------------------------------------------------------------------------------------
		bool m_rotate = false;


		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Draw the ground plane and the plants in the scene
		//----------------------------------------------------------------------------------------------------------------------
		void drawScene();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Initialise PlantBlueprint presets
		/// These are hard coded values and the rules can be found in the folder presets
		//----------------------------------------------------------------------------------------------------------------------
		void initialisePresets();
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Move the camera
		/// @param _event Qt Key Event
		//----------------------------------------------------------------------------------------------------------------------
		void keyPressEvent(QKeyEvent *_event);
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Move the camera if left clicked
		/// @param _event Qt Event
		//----------------------------------------------------------------------------------------------------------------------
		void mouseMoveEvent (QMouseEvent * _event ) override;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief This checks which button is pressed
		/// @param _event Qt Event
		//----------------------------------------------------------------------------------------------------------------------
		void mousePressEvent ( QMouseEvent *_event) override;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief This checks if a button is released
		/// @param _event Qt Event
		//----------------------------------------------------------------------------------------------------------------------
		void mouseReleaseEvent ( QMouseEvent *_event ) override;
		//----------------------------------------------------------------------------------------------------------------------
		/// @brief Translate the camera in the current direction
		/// @param _event Qt Event
		//----------------------------------------------------------------------------------------------------------------------
		void wheelEvent( QWheelEvent *_event) override;
};

#endif // PLANTSCENE_H_
